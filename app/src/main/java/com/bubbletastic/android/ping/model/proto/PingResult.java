// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: protos.proto at 17:1
package com.bubbletastic.android.ping.model.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PingResult extends Message<PingResult, PingResult.Builder> {
  public static final ProtoAdapter<PingResult> ADAPTER = new ProtoAdapter_PingResult();

  private static final long serialVersionUID = 0L;

  public static final HostStatus DEFAULT_STATUS = HostStatus.unreachable;

  public static final Long DEFAULT_PINGED_AT = 0L;

  public static final Integer DEFAULT_ROUND_TRIP_AVG = 0;

  @WireField(
      tag = 1,
      adapter = "com.bubbletastic.android.ping.model.proto.HostStatus#ADAPTER"
  )
  public final HostStatus status;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long pinged_at;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer round_trip_avg;

  public PingResult(HostStatus status, Long pinged_at, Integer round_trip_avg) {
    this(status, pinged_at, round_trip_avg, ByteString.EMPTY);
  }

  public PingResult(HostStatus status, Long pinged_at, Integer round_trip_avg, ByteString unknownFields) {
    super(unknownFields);
    this.status = status;
    this.pinged_at = pinged_at;
    this.round_trip_avg = round_trip_avg;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.status = status;
    builder.pinged_at = pinged_at;
    builder.round_trip_avg = round_trip_avg;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PingResult)) return false;
    PingResult o = (PingResult) other;
    return equals(unknownFields(), o.unknownFields())
        && equals(status, o.status)
        && equals(pinged_at, o.pinged_at)
        && equals(round_trip_avg, o.round_trip_avg);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (pinged_at != null ? pinged_at.hashCode() : 0);
      result = result * 37 + (round_trip_avg != null ? round_trip_avg.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (status != null) builder.append(", status=").append(status);
    if (pinged_at != null) builder.append(", pinged_at=").append(pinged_at);
    if (round_trip_avg != null) builder.append(", round_trip_avg=").append(round_trip_avg);
    return builder.replace(0, 2, "PingResult{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PingResult, Builder> {
    public HostStatus status;

    public Long pinged_at;

    public Integer round_trip_avg;

    public Builder() {
    }

    public Builder status(HostStatus status) {
      this.status = status;
      return this;
    }

    public Builder pinged_at(Long pinged_at) {
      this.pinged_at = pinged_at;
      return this;
    }

    public Builder round_trip_avg(Integer round_trip_avg) {
      this.round_trip_avg = round_trip_avg;
      return this;
    }

    @Override
    public PingResult build() {
      return new PingResult(status, pinged_at, round_trip_avg, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PingResult extends ProtoAdapter<PingResult> {
    ProtoAdapter_PingResult() {
      super(FieldEncoding.LENGTH_DELIMITED, PingResult.class);
    }

    @Override
    public int encodedSize(PingResult value) {
      return (value.status != null ? HostStatus.ADAPTER.encodedSizeWithTag(1, value.status) : 0)
          + (value.pinged_at != null ? ProtoAdapter.INT64.encodedSizeWithTag(2, value.pinged_at) : 0)
          + (value.round_trip_avg != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.round_trip_avg) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PingResult value) throws IOException {
      if (value.status != null) HostStatus.ADAPTER.encodeWithTag(writer, 1, value.status);
      if (value.pinged_at != null) ProtoAdapter.INT64.encodeWithTag(writer, 2, value.pinged_at);
      if (value.round_trip_avg != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.round_trip_avg);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PingResult decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: {
            try {
              builder.status(HostStatus.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 2: builder.pinged_at(ProtoAdapter.INT64.decode(reader)); break;
          case 3: builder.round_trip_avg(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PingResult redact(PingResult value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
